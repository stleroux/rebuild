https://medium.com/swlh/a-guide-on-laravel-relationships-1febfac430f6

=========================================================================================
One to One
=========================================================================================
hasOne <-> belongsTo
-----------------------------------------------------------------------------------------
ex.: A user can only have one passport, and a passport only belongs to one user

- A user hasOne passport
   public function passport() {
      return $this->hasOne(App\Passport::class);
   }
-----------------------------------------------------------------------------------------
- A passport belongsTo a user
   public function user() {
      return $this->belongsTo(App\User::class);
   }


=========================================================================================
One To Many
=========================================================================================
HasMany <-> belongsTo
-----------------------------------------------------------------------------------------
ex.: A user can have multiple invoices, but an invoice only belongs to one user.

- A user hasMany invoices
   public function invoices() {
      return $this->hasMany(App\Invoice::class);
   }

- An invoice belongsTo a user
   public function user() {
      return $this->belongsTo(App\User::class);
   }


=========================================================================================
Many To Many
=========================================================================================
belongsToMany <-> belongsToMany
-----------------------------------------------------------------------------------------
ex.: An invoice can have multiple products and a product can be on multiple invoices

- An invoice belongsToMany products
   public function products() {
      return $this->belongsToMany(App\Product::class);
   }

- A product belogsToMany invoices
   public function invoices() {
      return $this->belongsToMany(App\Invoice::class);
   }

* require a junction table (pivot table) in the database


=========================================================================================
Has one through
=========================================================================================

-----------------------------------------------------------------------------------------

=========================================================================================
=========================================================================================
-----------------------------------------------------------------------------------------

=========================================================================================
=========================================================================================
-----------------------------------------------------------------------------------------

=========================================================================================
=========================================================================================
-----------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------
